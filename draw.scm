(define (level-background rp)
  (let* ((rn (- rp))
         (sp (/ rp 2))
         (sn (- sp))
         (tp (* rp (sin (/ pi 3))))
         (tn (- tp)))

    ; background
    (cairo-set-source-rgb *c* 0.4 0.4 0.6)
    (cairo-move-to *c* 0 0)
    (cairo-line-to *c* (* d rn) (* d 0))
    (cairo-line-to *c* (* d sn) (* d tn))
    (cairo-line-to *c* 0 0)
    (cairo-line-to *c* (* d rp) (* d 0))
    (cairo-line-to *c* (* d sp) (* d tn))
    (cairo-line-to *c* 0 0)
    (cairo-line-to *c* (* d sp) (* d tp))
    (cairo-line-to *c* (* d sn) (* d tp))
    (cairo-line-to *c* 0 0)
    (cairo-fill *c*)
    (cairo-set-source-rgb *c* 0.1 0.1 0.3)
    (cairo-line-to *c* (* d sn) (* d tp))
    (cairo-line-to *c* (* d rn) (* d 0))
    (cairo-line-to *c* 0 0)
    (cairo-line-to *c* (* d rp) (* d 0))
    (cairo-line-to *c* (* d sp) (* d tp))
    (cairo-line-to *c* 0 0)
    (cairo-line-to *c* (* d sp) (* d tn))
    (cairo-line-to *c* (* d sn) (* d tn))
    (cairo-line-to *c* 0 0)
    (cairo-fill *c*)

    ; hexagon
    (cairo-move-to *c* rn 0)
    (cairo-line-to *c* sn tn)
    (cairo-line-to *c* sp tn)
    (cairo-line-to *c* rp 0)
    (cairo-line-to *c* sp tp)
    (cairo-line-to *c* sn tp)
    (cairo-line-to *c* rn 0)
    (cairo-set-source-rgb *c* 0 0 0.2)
    (cairo-fill-preserve *c*)
    (cairo-set-source-rgb *c* 0 0 1)
    (cairo-stroke *c*)))

(define (draw-level)
  (cairo-save *c*)
  (let ((bw (/ doodle-width 2))
        (bh (/ doodle-height 2)))
    (cairo-set-line-width *c* 3)
    (cairo-translate *c* bw bh)
    (cairo-scale *c* 1 0.7)
    (cairo-rotate *c* (channel-value hex-angle))
    (level-background 50))
  (cairo-restore *c*))

(define (draw-time)
  (text 10 30
        (sprintf "~A" (/ (channel-value time) 1000))))

(define (draw-fps)
  (text 10 10 (sprintf "~A fps" (channel-value fps))))

(define (draw-all)
  (draw-level)

  ; overlay
  (draw-fps)
  (draw-time))
